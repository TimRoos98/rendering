---
# Source: pihole/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-pihole-password
  labels:
    app: pihole
    heritage: Helm
    release: my-piholeV2
    updated: true
type: Opaque
data:
  password: "NewPassword="
---
# Source: pihole/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-pihole-custom-dnsmasq
  labels:
    app: pihole
    chart: pihole-2.22.0
    release: my-piholeV2
    heritage: Helm
data:
  02-custom.conf: |
    addn-hosts=/etc/addn-hosts
  addn-hosts: |
  05-pihole-custom-cname.conf: |
---
# Source: pihole/templates/service-dhcp.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-pihole-dhcp
  labels:
    app: pihole
    chart: pihole-2.22.0
    release: my-pihole
    heritage: Helm
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - port: 68
      targetPort: client-udp
      protocol: UDP
      name: client-udp
  selector:
    app: pihole
    release: my-pihole

---

# Source: pihole/templates/service-dns-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-pihole-dns-udp
  labels:
    app: pihole
    chart: pihole-2.22.0
    release: my-pihole
    heritage: Helm
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - port: 53
      targetPort: dns-udp
      protocol: UDP
      name: dns-udp
    - port: 54
      targetPort: 54
      protocol: TCP
      name: dns-udp2
  selector:
    app: pihole
    release: my-pihole
---
# Source: pihole/templates/service-web.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-pihole-web
  labels:
    app: pihole
    chart: pihole-2.22.0
    release: my-pihole
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    - port: 53
      targetPort: dns-udp
      protocol: UDP
      name: dns-udp
  selector:
    app: pihole
    release: my-pihole
---
# Source: pihole/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-pihole
  labels:
    app: pihole
    chart: pihole-2.22.0
    release: my-pihole
    heritage: Helm
spec:
  replicas: 2
  strategy:
    type: Recreate
    recreate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: pihole
      release: my-pihole
  template:
    metadata:
      annotations:
        checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.dnsmasqConfig: 21660557a63f331f8f9ec919656f89ba254ad5422d67cc9440dbf55ed2ae573
        checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
      labels:
        app: pihole
        release: my-pihole
    spec:
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 0.0.0.0
          - 8.8.8.8
      hostname:
      hostNetwork: false
      containers:
        - name: pihole
          env:
            - name: 'WEB_PORT'
              value: "80"
            - name: VIRTUAL_HOST
              value: pi.hole
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: my-pihole-password
            - name: 'PIHOLE_DNS_'
              value: '8.8.8.8;8.8.4.4'
          image: "pihole/pihole:2024.02.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 53
              name: dns
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort:  443
              name: https
              protocol: TCP
            - containerPort: 67
              name: client-udp
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /admin/index.php
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /admin/index.php
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            failureThreshold: 3
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/pihole
              name: config
            - mountPath: /etc/dnsmasq.d/02-custom.conf
              name: custom-dnsmasq
              subPath: 02-custom.conf
            - mountPath: /etc/addn-hosts
              name: custom-dnsmasq
              subPath: addn-hosts
          resources:
            limits:
              cpu: 1100m
              memory: 1Gi
            requests:
              cpu: 500m
      volumes:
        - name: config
          emptyDir: {}
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
---
# Source: pihole/templates/tests/test-pihole-endpoint.yml
apiVersion: v1
kind: Pod
metadata:
  name: "my-pihole-smoke-test"
  annotations:
    "helm.sh/hook": test2
spec:
  containers:
    - name: hook1-container
      image: curlimages/curlV2
      imagePullPolicy: Always
      command: ['sh', 'curl http://my-pihole-web:80/', 'somethingTestV2']
  restartPolicy: OnFailure
  terminationGracePeriodSeconds: 20